package Interceptor;

import java.lang.Thread.State;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Map;
import java.util.Properties;
import entity.Page;
import org.apache.ibatis.executor.parameter.ParameterHandler;
import org.apache.ibatis.executor.statement.StatementHandler;
import org.apache.ibatis.mapping.BoundSql;
import org.apache.ibatis.mapping.MappedStatement;
import org.apache.ibatis.plugin.Interceptor;
import org.apache.ibatis.plugin.Intercepts;
import org.apache.ibatis.plugin.Invocation;
import org.apache.ibatis.plugin.Plugin;
import org.apache.ibatis.plugin.Signature;
import org.apache.ibatis.reflection.MetaObject;
import org.apache.ibatis.reflection.SystemMetaObject;

import entity.Page;
import com.mysql.jdbc.Connection;
/*
 * 分页拦截器
 */

//分页拦截器描述拦截这件事，mybatis提供相关的注解
@Intercepts({@Signature(type=StatementHandler.class,method="prepare", args={Connection.class})})

public class PageInterceptor implements Interceptor{

	@Override
	public Object intercept(Invocation arg0) throws Throwable {
		StatementHandler statementHandler = (StatementHandler)arg0.getTarget();
		MetaObject metaObject = MetaObject.forObject(statementHandler, SystemMetaObject.DEFAULT_OBJECT_FACTORY, SystemMetaObject.DEFAULT_OBJECT_WRAPPER_FACTORY);
		MappedStatement mappedStatement = (MappedStatement)metaObject.getValue("delegate.mappedStatement");
		
		//配置文件中SQL语句的ID
	    String id = mappedStatement.getId();
	    //$匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与“\n”或“\r”之前的位置匹配。
	    //+一次或多次匹配前面的字符或子表达式。例如，“zo+”与“zo”和“zoo”匹配，但与“z”不匹配。+ 等效于 {1,}
	    
	    if(id.matches(".+ByPage$"))
		{
			BoundSql boundSql = statementHandler.getBoundSql();
			// 原始的SQL语句
			String sql = boundSql.getSql();
			
			//查询
			Map<String, Object> parameter = (Map<String, Object>)boundSql.getParameterObject();
			
			Page page = (Page)parameter.get("page");
			
			//改造后带分页查询的SQL语句
			String pageSql = sql+" limit "+page.getIndexMessageNumber()+","+page.getPagenumber();
		}
		return null;
	}

	@Override
	public Object plugin(Object arg0) {
		// 返回一个代理实例
		return Plugin.wrap(arg0, this);
	}

	@Override
	public void setProperties(Properties arg0) {
		// TODO Auto-generated method stub
		
	}

}

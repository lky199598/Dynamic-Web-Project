package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import entity.Items;

public class ItemsDao {
	private Connection conn;
	private PreparedStatement pre;
	private ResultSet res;
	
	public ItemsDao()
	{
		conn = null;
		pre=null;
		res = null;
	}
	
	 public void get_Connection()
	    {
	        try
	        {
	            Class.forName("com.mysql.jdbc.Driver");
	            String url="jdbc:mysql://localhost:3306/shopping?useUnicode=true&characterEncoding=utf-8";
	            conn=DriverManager.getConnection(url, "root", "");
	        }
	        catch(ClassNotFoundException e)
	        {
	            e.printStackTrace();
	        }
	        catch(SQLException e)
	        {
	            e.printStackTrace();
	        }
	    }

	
	public void close()
	{
		 if(conn != null)
		    {
		    	try {
					conn.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					System.out.println("数据库关闭失败!\n");
					e.printStackTrace();
				}
		    	conn=null;
		    }
		 
		 if(pre != null)
		    {
		    	try {
					pre.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
		    	pre=null;		    	
		    }
		    
		    if(res != null)
		    {
		    	try {
					res.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
		    	res=null;
		    }
		    
		   
	}
	public ArrayList<Items> getAllItems()
	{
	  ArrayList<Items> list = new ArrayList<Items>();
	  get_Connection();
		
		try {
			pre = conn.prepareStatement("select *from items");
		    res = pre.executeQuery();
		    
		    while(res.next())
		    {
		    	Items item = new Items();
		    	item.setId(res.getInt("Shopping_id"));
		    	item.setName(res.getString("name"));
		    	item.setCity(res.getString("city"));
		    	item.setNumber(res.getInt("number"));
		    	item.setPrice(res.getInt("price"));
		    	item.setPicture(res.getString("picture"));
		    	list.add(item);
		    }
		    close();
		    return list;
				
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
	
	public Items getItems_information(int id)
	{
		get_Connection();
		
		try {
			 pre= conn.prepareStatement("select *from items where Shopping_id=?");
			 pre.setInt(1, id);
			 res= pre.executeQuery();
			
			if(res.next())
			{
				Items items = new Items();
				items.setId(res.getInt("Shopping_id"));
				items.setName(res.getString("name"));
				items.setCity(res.getString("city"));
				items.setNumber(res.getInt("number"));
				items.setPrice(res.getInt("price"));
				items.setPicture(res.getString("picture"));
				
				close();
			return items;
			}
		    			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return null;
	}
	
	public ArrayList<Items> getFiveList(String record_id)
	{
		System.out.println("record_ID: "+record_id);
		ArrayList<Items> list = new ArrayList<Items>();
		int count=5;//返回前五条记录
		if(record_id != null && record_id.length() > 0)
		{
			String[] id = record_id.split(",");
			if(id.length >= 6)
				for(int i=id.length-2; i>id.length-2-count; i--)
					list.add(getItems_information(Integer.parseInt(id[i])));
			
			else
				for(int i=id.length-2; i>=0; i--)					
					list.add(getItems_information(Integer.parseInt(id[i])));			
		return list;
		}
		return null;		
	}
	
	public void AddCart(int id, int BuyNumber)//商品加入购物车后库存量的变化
	{
	
		get_Connection();
	    try {
	    	int number = 0;
			pre = conn.prepareStatement("select number from items where id =?");
			pre.setInt(1, id);
			res = pre.executeQuery();
			if(res.next())
				 number  = res.getInt("number");
			
			   pre = conn.prepareStatement("update items set number=? where id=?");
			   pre.setInt(1, number-BuyNumber);
			   pre.setInt(2, id);
			   pre.executeUpdate();
					close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
   
	}
	
	public void DeleteCart(int id, int DeleteNumber) 
	{
	
		get_Connection();		
		try {
			int number = 0;
			pre =  conn.prepareStatement("select number from items where id = ?");
			pre.setInt(1, id);
			res = pre.executeQuery();
			if(res.next())
				number = res.getInt("number");
			
			pre = conn.prepareStatement("update items set number=? where id=?");
			pre.setInt(1, number+DeleteNumber);
			pre.setInt(2, id);
			pre.executeUpdate();
			close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
}

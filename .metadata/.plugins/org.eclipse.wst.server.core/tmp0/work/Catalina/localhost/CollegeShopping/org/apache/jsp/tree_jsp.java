/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.63
 * Generated at: 2016-12-27 06:17:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class tree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<title>导航树</title>\r\n");
      out.write("\t<meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\">\r\n");
      out.write("\t<style type=\"text/css\">@import url('components/dtree/dtree.css');</style>\r\n");
      out.write("\t<script type=\"text/javascript\">var dtreeIconBasePath = \"components/dtree\";</script>\r\n");
      out.write("\t<script type=\"text/javascript\"  src=\"components/dtree/dtree.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\"> \r\n");
      out.write("var treeMenu = [\r\n");
      out.write("\t{ level:1, name:\"学生管理\"},\r\n");
      out.write("\t{ level:2, name:\"学生列表\", ico:\"images/icon_default.gif\",link:\"students/queryAllStudents.action\"},\r\n");
      out.write("\t{ level:1, name:\"教师管理\"},\r\n");
      out.write("\t{ level:2, name:\"教师列表\", ico:\"images/icon_default.gif\",link:\"role_list.html\"},\r\n");
      out.write("\t{ level:1, name:\"信息管理\"},\r\n");
      out.write("\t{ level:2, name:\"新闻管理\", ico:\"images/icon_default.gif\",link:\"news_list.html\"},\r\n");
      out.write("\t{ level:2, name:\"公告管理\", ico:\"images/icon_default.gif\",link:\"bulletin_list.html\"},\r\n");
      out.write("\t{ level:1, name:\"系统邮件\", ico:\"images/icon_default.gif\"},\r\n");
      out.write("\t{ level:1, name:\"网络文件\", ico:\"images/icon_default.gif\",link:\"complaint_list.html\"}\r\n");
      out.write("];\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("    background: none repeat scroll 0 0 transparent;\r\n");
      out.write("    border: 0 none;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    vertical-align: baseline;\r\n");
      out.write("\tfont-family:微软雅黑;\r\n");
      out.write("\toverflow:hidden;\r\n");
      out.write("}\r\n");
      out.write("#menuControll{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\tposition:relative;\r\n");
      out.write("\tword-wrap:break-word;\r\n");
      out.write("\tborder-bottom:1px solid #065FB9;\r\n");
      out.write("\tmargin:0;\r\n");
      out.write("\tpadding:0 10px;\r\n");
      out.write("\tfont-size:14px;\r\n");
      out.write("\theight:40px;\r\n");
      out.write("\tline-height:40px;\r\n");
      out.write("\tvertical-align:middle;\r\n");
      out.write("    background-image: -moz-linear-gradient(top,#EBEBEB, #BFBFBF);\r\n");
      out.write("    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, #EBEBEB),color-stop(1, \r\n");
      out.write("#BFBFBF));\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<div id=\"menuControll\">\r\n");
      out.write("菜单控制:【<a href=\"#\" onclick=\"tree.openAll();this.blur();return false;\" style=\"color:#333333;text-decoration:none\">展开</a>】\r\n");
      out.write("【<a href=\"#\" onclick=\"tree.closeAll();this.blur();return false;\" style=\"color:#333333;text-decoration:none\">折叠</a>】\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"dtree\" style=\"margin:10px;\">\r\n");
      out.write("<script type=\"text/javascript\"> \r\n");
      out.write("//建立新树\r\n");
      out.write("tree = new dTree('tree');\r\n");
      out.write("tree.config.target = \"MainFrame\";\r\n");
      out.write("tree.config.useCookies = false;\r\n");
      out.write("var selNum = -1;\r\n");
      out.write("var link = \"\";\r\n");
      out.write("//根目录\r\n");
      out.write("tree.add(0,-1,'管理中心', null, null, null, '', '');\r\n");
      out.write("var count = 0;\r\n");
      out.write("var pLevelIdArray = new Array();\r\n");
      out.write("pLevelIdArray[1] = 0;\r\n");
      out.write("var currLevel = 1;\r\n");
      out.write("for (var i=0; i<treeMenu.length; i++) {\r\n");
      out.write("\tvar item = treeMenu[i];\r\n");
      out.write("\tvar itemLevel = item.level;\r\n");
      out.write("\tpLevelIdArray[itemLevel+1] = ++count;\r\n");
      out.write("\tif (item.link!=null && item.link!=\"\") {\r\n");
      out.write("\t\tif (item.ico!=null) {\r\n");
      out.write("\t\t\ttree.add(count, pLevelIdArray[itemLevel], item.name, item.link, null, null, item.ico, item.ico);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\ttree.add(count, pLevelIdArray[itemLevel], item.name, item.link);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\tif (item.ico!=null) {\r\n");
      out.write("\t\t\ttree.add(count, pLevelIdArray[itemLevel], item.name, null, null, null, item.ico, item.ico);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\ttree.add(count, pLevelIdArray[itemLevel], item.name);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tif (item.select) {\r\n");
      out.write("\t\tselNum = count;\r\n");
      out.write("\t\tlink = item.link;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("document.write(tree);\r\n");
      out.write("tree.openAll();\r\n");
      out.write("if (selNum != -1) {\r\n");
      out.write("\ttree.openTo(selNum,true);\r\n");
      out.write("\ttop.document.frames[\"MainFrame\"].location.href=link;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
